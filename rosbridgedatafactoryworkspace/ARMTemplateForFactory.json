{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rosbridgedatafactoryworkspace"
		},
		"AzureDatabricks_LinkedService_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_LinkedService'"
		},
		"AzureSqlDatabaseLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseLinkedService'"
		},
		"AzureStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageLinkedService'"
		},
		"rosbagstorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'rosbagstorageLinkedService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SplitRealtorCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SplitRealtorCSV",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SplitRealtorCSV",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RealtorCSV": {},
									"DataLake": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SplitRealtorCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RealtorSplitedCSVOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rosbagstorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "realtorData/patitioned",
						"container": "bags-ouput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rosbagstorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/realtorCSVDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rosbagstorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "test/csv"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "realtor-data.csv",
						"container": "bags-ouput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "bed",
						"type": "String"
					},
					{
						"name": "bath",
						"type": "String"
					},
					{
						"name": "acre_lot",
						"type": "String"
					},
					{
						"name": "full_address",
						"type": "String"
					},
					{
						"name": "street",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "zip_code",
						"type": "String"
					},
					{
						"name": "house_size",
						"type": "String"
					},
					{
						"name": "sold_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rosbagstorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8497502410675492.12.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_LinkedService_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rosbagstorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('rosbagstorageLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SplitRealtorCSV')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "realtorCSVDataset",
								"type": "DatasetReference"
							},
							"name": "RealtorCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RealtorSplitedCSVOutput",
								"type": "DatasetReference"
							},
							"name": "DataLake"
						}
					],
					"transformations": [
						{
							"name": "RoundRobinPartition"
						}
					],
					"scriptLines": [
						"source(output(",
						"          status as string,",
						"          price as string,",
						"          bed as string,",
						"          bath as string,",
						"          acre_lot as string,",
						"          full_address as string,",
						"          street as string,",
						"          city as string,",
						"          state as string,",
						"          zip_code as string,",
						"          house_size as string,",
						"          sold_date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> RealtorCSV",
						"RealtorCSV select(mapColumn(",
						"          status,",
						"          price,",
						"          bed,",
						"          bath,",
						"          acre_lot,",
						"          full_address,",
						"          street,",
						"          city,",
						"          state,",
						"          zip_code,",
						"          house_size,",
						"          sold_date",
						"     ),",
						"     partitionBy('roundRobin', 100),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RoundRobinPartition",
						"RoundRobinPartition sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DataLake"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/realtorCSVDataset')]",
				"[concat(variables('factoryId'), '/datasets/RealtorSplitedCSVOutput')]"
			]
		}
	]
}