{
	"name": "TransformData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RealtorCSVInput",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataForSale",
						"type": "DatasetReference"
					},
					"name": "forSaleOutput"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     inFile as string",
				"}",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          status = Column_1,",
				"          price = Column_2,",
				"          bed = Column_3,",
				"          bath = Column_4,",
				"          acre_lot = Column_5,",
				"          full_address = Column_6,",
				"          street = Column_7,",
				"          city = Column_8,",
				"          state = Column_9,",
				"          zip_code = Column_10,",
				"          house_size = Column_11",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 split(status=='for_sale',",
				"     status=='ready_to_build',",
				"     disjoint: false) ~> split1@(dataForSale, ReadyToBuild, all)",
				"split1@dataForSale sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> forSaleOutput"
			]
		}
	}
}